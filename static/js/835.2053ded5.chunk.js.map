{"version":3,"file":"static/js/835.2053ded5.chunk.js","mappings":"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","sources":["config/firebase.ts","hooks/useRedux.ts","helpers/updateAdditionalUserData.ts","pages/User/User.tsx"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);","import { useDispatch, useSelector } from 'react-redux'\nimport type { TypedUseSelectorHook } from 'react-redux'\nimport { AppDispatch, RootState } from '../redux/store'\n\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { doc, updateDoc } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\";\n\nimport { UserAdditionalData } from \"../types/UserAdditionalData\";\n\nexport const updateAdditionalUserData = async (uid: string, data: UserAdditionalData) => {\n  const ref = doc(db, \"users\", uid);\n\n  await updateDoc(ref, { ...data });\n};","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { getAuth, signOut, updateEmail, updatePassword } from \"firebase/auth\";\nimport { setUser } from '../../redux/slices/userSlice';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\nimport { updateAdditionalUserData } from '../../helpers/updateAdditionalUserData';\nimport './User.scss';\n\nconst User = () => {\n  const dispatch = useAppDispatch();\n  const user = useAppSelector(state => state.user.user);\n\n  const [firstName, setFirstName] = useState(user.firstName);\n  const [email, setEmail] = useState(user.email);\n  const [password, setPassword] = useState(user.password);\n  const [isChange, setIsChange] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isShowPassword, setIsShowPassword] = useState(false);\n\n  const auth = getAuth();\n  const navigate = useNavigate();\n\n  const onClickSave = async () => {\n    setIsLoading(true);\n    setIsShowPassword(false);\n\n    if (auth.currentUser) {\n      let emailOrPasswordIsChanged;\n\n      if (email !== user.email) {\n        emailOrPasswordIsChanged = true;\n      }\n\n      if (password !== user.password) {\n        emailOrPasswordIsChanged = true;\n      }\n\n      if (user.firstName !== firstName || password !== user.password) {\n        await updateAdditionalUserData(\n          auth.currentUser.uid,\n          { firstName, password }\n        );\n      }\n\n      if (emailOrPasswordIsChanged) {\n        await updateEmail(auth.currentUser, email);\n        await updatePassword(auth.currentUser, password);\n\n        onClickExit();\n      }\n    }\n\n    setIsChange(false);\n    setIsLoading(false);\n  };\n\n  const onClickExit = () => {\n    setIsLoading(true);\n    setIsShowPassword(false);\n\n    signOut(auth).then(() => {\n      dispatch(setUser({\n        firstName: \"\",\n        password: \"\", \n        email: \"\" \n      }));\n      \n      navigate('/signIn');\n    }).catch(error => console.log(error))\n    .finally(() => setIsLoading(false));\n  };\n\n  const onCancel = () => {\n    setFirstName(user.firstName);\n    setEmail(user.email);\n    setPassword(user.password);\n    setIsChange(false);\n    setIsShowPassword(false);\n  };\n\n  const onShowPassword = () => {\n    setIsShowPassword(currValue => !currValue);\n  };\n\n  useEffect(() => {\n    if (!email.length) {\n      navigate(\"/signIn\");\n    }\n  }, []);\n\n  if (!email.length) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <section className=\"page__section user\">\n        <div className=\"container\">\n          <div className=\"user__wrapper\">\n            <button\n              className=\"user__sign-out\"\n              onClick={onClickExit}\n            >\n              <img\n                className=\"user__icon\"\n                src=\"./assets/icons/quit.svg\"\n                alt=\"icon\"\n              />\n            </button>\n  \n            <div className=\"user__input-wrapper\">\n              <label className=\"user__label\">\n                First name\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  value={firstName}\n                  onChange={e => setFirstName(e.target.value)}\n                  disabled={!isChange}\n                />\n              </label>\n        \n              <label className=\"user__label\">\n                Email\n                <input\n                  className=\"input\"\n                  type=\"email\"\n                  value={email}\n                  onChange={e => setEmail(e.target.value)}\n                  disabled={!isChange}\n                />\n              </label>\n    \n              <label className=\"user__label\">\n                Password\n\n                <div className=\"user__password__wrapper\">\n                  <input\n                    className=\"input user__password\"\n                    type={isShowPassword ? \"text\" : \"password\"}\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    disabled={!isChange}\n                  />\n\n                  <button onClick={onShowPassword}>\n                    <img\n                      className=\"user__password__icon\"\n                      src={isShowPassword ? \"./assets/icons/eye.svg\" : \"./assets/icons/closed-eye.svg\"}\n                      alt=\"icon\"\n                    />\n                  </button>\n                </div>\n              </label>\n            </div>\n  \n            <div className=\"user__btns\">\n              {isChange\n                ? (\n                  <>\n                    <button\n                      className=\"btn\"\n                      onClick={onClickSave}\n                    >\n                      Save\n                    </button>\n    \n                    <button\n                      className=\"btn\"\n                      onClick={onCancel}\n                    >\n                      Cancel\n                    </button>\n                  </>\n                ) : (\n                  <button\n                    className=\"btn\"\n                    onClick={() => setIsChange(true)}\n                  >\n                    Change\n                  </button>\n                )}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {isLoading && <p>Loading...</p>}\n    </>\n  );\n};\n\nexport default User;"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","useAppDispatch","useDispatch","useAppSelector","useSelector","updateAdditionalUserData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","uid","data","ref","wrap","_context","prev","next","doc","updateDoc","_objectSpread","stop","_x","_x2","apply","arguments","dispatch","user","state","_useState","useState","firstName","_useState2","_slicedToArray","setFirstName","_useState3","email","_useState4","setEmail","_useState5","password","_useState6","setPassword","_useState7","_useState8","isChange","setIsChange","_useState9","_useState10","isLoading","setIsLoading","_useState11","_useState12","isShowPassword","setIsShowPassword","auth","getAuth","navigate","useNavigate","onClickSave","emailOrPasswordIsChanged","currentUser","updateEmail","updatePassword","onClickExit","signOut","then","setUser","catch","error","console","log","finally","useEffect","length","_jsxs","_Fragment","children","_jsx","className","onClick","src","alt","type","value","onChange","e","target","disabled","currValue"],"sourceRoot":""}