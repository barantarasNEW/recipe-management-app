{"version":3,"file":"static/js/517.fbb6096e.chunk.js","mappings":"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","sources":["components/BreadCrumbs/BreadCrumbs.tsx","components/Loader/Loader.tsx","hooks/useRedux.ts","components/Modal/Modal.tsx","pages/Start/Start.tsx"],"sourcesContent":["import { useNavigate } from \"react-router\";\nimport './BreadCrumbs.scss';\n\nconst BreadCrumbs = () => {\n  const navigate = useNavigate();\n\n  const onClick = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div className=\"bread-crumbs\">\n      <button className=\"bread-crumbs__btn\" onClick={onClick}>\n        <img\n          className=\"bread-crumbs__icon\"\n          src=\"/assets/icons/back.svg\"\n          alt=\"icon\"\n        />\n        \n        Back\n      </button>\n    </div>\n  );\n};\n\nexport default BreadCrumbs;","import { createPortal } from \"react-dom\";\nimport './Loader.scss';\n\nconst Loader = () => {\n  return (\n    <>\n      {createPortal(\n        (\n          <div className=\"lds-ellipsis\">\n          <div />\n          <div />\n          <div />\n          <div />\n        </div>\n        ),\n        document.getElementById('portal') as HTMLElement\n      )}\n  </>\n  );\n};\n\nexport default Loader;","import { useDispatch, useSelector } from 'react-redux'\nimport type { TypedUseSelectorHook } from 'react-redux'\nimport { AppDispatch, RootState } from '../redux/store'\n\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import React, { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport './Modal.scss';\n\ntype Props = {\n  name: string;\n}\n\nconst Modal: React.FC<Props> = ({ name }) => {\n  const [isOpen, setIsOpen] = useState(true);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setIsOpen(false);\n    }, 2000);\n\n    return () => clearTimeout(timeout);\n  }, [setIsOpen]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <>\n      {createPortal(\n        (\n         <div className=\"modal\">\n          {name}\n         </div>\n        ),\n        document.getElementById('portal') as HTMLElement\n      )}\n  </>\n  );\n};\n\nexport default Modal;","import { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport * as recipeActions from '../../redux/slices/recipeSlice';\nimport Modal from \"../../components/Modal/Modal\";\nimport Loader from \"../../components/Loader/Loader\";\nimport BreadCrumbs from \"../../components/BreadCrumbs/BreadCrumbs\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks/useRedux\";\nimport './Start.scss';\n\nconst Start = () => {\n  const dispatch = useAppDispatch();\n  const { email } = useAppSelector(state => state.user).user;\n  const { recipe, loading, error } = useAppSelector(state => state.recipe);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [statusBarCount, setStatusBarCount] = useState(0);\n  const [disabledIng, setDisabledIng] = useState<string[]>([]);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const onClick = (value: string) => {\n    if (recipe) {\n      setStatusBarCount(prev => prev + 100 / (recipe.recipe.length));\n      setDisabledIng(prev => ([...prev, value]));\n    }\n  };\n\n  const onClickCancel = () => {\n    setDisabledIng([]);\n    setStatusBarCount(0);\n    setIsSuccess(false);\n  };\n  \n  useEffect(() => {\n    if (!email.length) {\n      navigate(\"/signIn\");\n    }\n\n    if (id) {\n      dispatch(recipeActions.init(+id));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (recipe && recipe?.recipe.length === disabledIng.length) {\n      setIsSuccess(true);\n    }\n  }, [disabledIng]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <p>Error</p>;\n  }\n\n  if (!recipe) {\n    return <p>Not found</p>\n  }\n  \n  return (\n    <>\n      <section className=\"page__section start\">\n        <div className=\"container\">\n          <div className=\"start__wrapper\">\n            <BreadCrumbs />\n\n            <div className=\"start__status-bar\">\n              <div\n                className=\"start__status-bar__com\"\n                style={{ width: `${statusBarCount}%` }}\n              ></div>\n            </div>\n  \n            <h2 className=\"start__title\">{recipe.name}</h2>\n  \n            <div className=\"start__main__wrapper\">\n              <img\n                className=\"start__img\"\n                src={recipe.img}\n                alt=\"product\"\n              />\n    \n              <ul className=\"start__list\">\n                {recipe.recipe.map(value => (\n                  <li key={value} className=\"start__item\">\n                    <button\n                      className=\"start__item__btn\"\n                      onClick={() => onClick(value)}\n                      disabled={disabledIng.includes(value)}\n                    >\n                      {value}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            <button\n              className=\"start__btn\"\n              onClick={onClickCancel}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      </section>\n\n      {isSuccess && <Modal name=\"My congratulation!\" />}\n    </>\n  );\n};\n\nexport default Start;"],"names":["navigate","useNavigate","_jsx","className","children","_jsxs","onClick","src","alt","_Fragment","createPortal","document","getElementById","useAppDispatch","useDispatch","useAppSelector","useSelector","_ref","name","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","useEffect","timeout","setTimeout","clearTimeout","dispatch","email","state","user","_useAppSelector","recipe","loading","error","id","useParams","statusBarCount","setStatusBarCount","_useState3","_useState4","disabledIng","setDisabledIng","_useState5","_useState6","isSuccess","setIsSuccess","length","recipeActions","Loader","BreadCrumbs","style","width","concat","img","map","value","prev","_toConsumableArray","disabled","includes","Modal"],"sourceRoot":""}