{"version":3,"file":"static/js/38.6f77bbd7.chunk.js","mappings":"yLAyBA,EAtBoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,oBAAoBG,QAN1B,WACdN,GAAU,EACZ,EAI2DI,SAAA,EACrDF,EAAAA,EAAAA,KAAA,OACEC,UAAU,qBACVI,IAAI,yBACJC,IAAI,SACJ,WAMV,C,6ECFA,EAlBe,WACb,OACEN,EAAAA,EAAAA,KAAAO,EAAAA,SAAA,CAAAL,UACGM,EAAAA,EAAAA,eAEGL,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,aAGFS,SAASC,eAAe,YAIhC,C,4FCfaC,EAAoCC,EAAAA,GACpCC,EAAkDC,EAAAA,E,2ICwD/D,EArDe,WACb,IAAMC,GAAWJ,EAAAA,EAAAA,KACAK,GAAmBH,EAAAA,EAAAA,IAAe,SAAAI,GAAK,OAAIA,EAAMC,OAAO,IAAjEC,QACRC,GAAmCP,EAAAA,EAAAA,IAAe,SAAAI,GAAK,OAAIA,EAAMI,MAAM,IAA/DA,EAAMD,EAANC,OAAQF,EAAOC,EAAPD,QAASG,EAAKF,EAALE,MACjBC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,OANAE,EAAAA,EAAAA,YAAU,WACJF,GACFR,EAASW,EAAAA,IAAoBH,GAEjC,GAAG,IAECJ,GAAWH,GACNhB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,IAGZL,GACKtB,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAGPmB,GAKHrB,EAAAA,EAAAA,KAAA,WAASC,UAAU,uBAAsBC,UACvCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAW,KAEZ5B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAC1BmB,EAAOQ,QAGV7B,EAAAA,EAAAA,KAAA,OACEC,UAAU,cACVI,IAAKgB,EAAOS,IACZxB,IAAI,aAGNN,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sBAAqBC,SAChCmB,EAAOA,OAAOU,KAAI,SAAAC,GAAK,OACtBhC,EAAAA,EAAAA,KAAA,MAAgBC,UAAU,qBAAoBC,SAC3C8B,GADMA,EAEJ,cAvBRhC,EAAAA,EAAAA,KAAA,KAAAE,SAAG,aA8Bd,C","sources":["components/BreadCrumbs/BreadCrumbs.tsx","components/Loader/Loader.tsx","hooks/useRedux.ts","pages/Recipe/Recipe.tsx"],"sourcesContent":["import { useNavigate } from \"react-router\";\nimport './BreadCrumbs.scss';\n\nconst BreadCrumbs = () => {\n  const navigate = useNavigate();\n\n  const onClick = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div className=\"bread-crumbs\">\n      <button className=\"bread-crumbs__btn\" onClick={onClick}>\n        <img\n          className=\"bread-crumbs__icon\"\n          src=\"/assets/icons/back.svg\"\n          alt=\"icon\"\n        />\n        \n        Back\n      </button>\n    </div>\n  );\n};\n\nexport default BreadCrumbs;","import { createPortal } from \"react-dom\";\nimport './Loader.scss';\n\nconst Loader = () => {\n  return (\n    <>\n      {createPortal(\n        (\n          <div className=\"lds-ellipsis\">\n          <div />\n          <div />\n          <div />\n          <div />\n        </div>\n        ),\n        document.getElementById('portal') as HTMLElement\n      )}\n  </>\n  );\n};\n\nexport default Loader;","import { useDispatch, useSelector } from 'react-redux'\nimport type { TypedUseSelectorHook } from 'react-redux'\nimport { AppDispatch, RootState } from '../redux/store'\n\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport Loader from \"../../components/Loader/Loader\";\nimport BreadCrumbs from \"../../components/BreadCrumbs/BreadCrumbs\";\nimport * as recipeActions from '../../redux/slices/recipeSlice';\nimport { useAppDispatch, useAppSelector } from \"../../hooks/useRedux\";\nimport './Recipe.scss';\n\nconst Recipe = () => {\n  const dispatch = useAppDispatch();\n  const { loading: recipesLoading } = useAppSelector(state => state.recipes);\n  const { recipe, loading, error } = useAppSelector(state => state.recipe);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (id) {\n      dispatch(recipeActions.init(+id));\n    }\n  }, []);\n\n  if (loading || recipesLoading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <p>Error</p>;\n  }\n\n  if (!recipe) {\n    return <p>Not found</p>\n  }\n\n  return (\n    <section className=\"page__section recipe\">\n      <div className=\"container\">\n        <div className=\"recipe__wrapper\">\n          <BreadCrumbs />\n\n          <h2 className=\"recipe__title\">\n            {recipe.name}\n          </h2>\n\n          <img\n            className=\"recipe__img\"\n            src={recipe.img}\n            alt=\"product\"\n          />\n\n          <ul className=\"recipe__ingredients\">\n            {recipe.recipe.map(value => (\n              <li key={value} className=\"recipe__ingredient\">\n                {value}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Recipe;"],"names":["navigate","useNavigate","_jsx","className","children","_jsxs","onClick","src","alt","_Fragment","createPortal","document","getElementById","useAppDispatch","useDispatch","useAppSelector","useSelector","dispatch","recipesLoading","state","recipes","loading","_useAppSelector2","recipe","error","id","useParams","useEffect","recipeActions","Loader","BreadCrumbs","name","img","map","value"],"sourceRoot":""}